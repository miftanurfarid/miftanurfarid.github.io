<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://miftanurfarid.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://miftanurfarid.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-10-29T19:35:56+00:00</updated><id>https://miftanurfarid.github.io/feed.xml</id><title type="html">blank</title><subtitle>Sebuah ruang di mana saya berbagi catatan perjalanan dalam mengajar, penelitian, dan bimbingan akademik.</subtitle><entry><title type="html">Using Try-Except for Automatic Installation of Required Python Libraries</title><link href="https://miftanurfarid.github.io/blog/2024/try-except-library/" rel="alternate" type="text/html" title="Using Try-Except for Automatic Installation of Required Python Libraries"/><published>2024-10-28T15:06:00+00:00</published><updated>2024-10-28T15:06:00+00:00</updated><id>https://miftanurfarid.github.io/blog/2024/try-except-library</id><content type="html" xml:base="https://miftanurfarid.github.io/blog/2024/try-except-library/"><![CDATA[<p>To ensure that required libraries like <code class="language-plaintext highlighter-rouge">matplotlib</code>, <code class="language-plaintext highlighter-rouge">numpy</code>, and <code class="language-plaintext highlighter-rouge">librosa</code> are installed, you can use a <code class="language-plaintext highlighter-rouge">try-except</code> block to check for imports and install them using <code class="language-plaintext highlighter-rouge">subprocess</code>. Here’s an example implementation:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">subprocess</span>
<span class="kn">import</span> <span class="n">sys</span>

<span class="c1"># List of required libraries
</span><span class="n">libraries</span> <span class="o">=</span> <span class="p">[</span><span class="sh">'</span><span class="s">matplotlib</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">numpy</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">librosa</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">os</span><span class="sh">'</span><span class="p">]</span>

<span class="k">for</span> <span class="n">library</span> <span class="ow">in</span> <span class="n">libraries</span><span class="p">:</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="nf">__import__</span><span class="p">(</span><span class="n">library</span><span class="p">)</span>
        <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="si">{</span><span class="n">library</span><span class="si">}</span><span class="s"> is already installed.</span><span class="sh">"</span><span class="p">)</span>
    <span class="k">except</span> <span class="nb">ImportError</span><span class="p">:</span>
        <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="si">{</span><span class="n">library</span><span class="si">}</span><span class="s"> is not installed. Installing </span><span class="si">{</span><span class="n">library</span><span class="si">}</span><span class="s">...</span><span class="sh">"</span><span class="p">)</span>
        <span class="n">subprocess</span><span class="p">.</span><span class="nf">check_call</span><span class="p">([</span><span class="n">sys</span><span class="p">.</span><span class="n">executable</span><span class="p">,</span> <span class="sh">"</span><span class="s">-m</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">pip</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">install</span><span class="sh">"</span><span class="p">,</span> <span class="n">library</span><span class="p">])</span>
</code></pre></div></div> <p>Note:</p> <ul> <li>The <code class="language-plaintext highlighter-rouge">os</code> library is part of Python’s standard library, so it shouldn’t require installation. You can remove it from the list if it’s not needed.</li> <li>To run this, Python must have internet access and permission to install libraries.</li> </ul>]]></content><author><name></name></author><category term="tips-dan-trik-python"/><category term="python"/><category term="try-except"/><summary type="html"><![CDATA[This post discusses how to use try-except blocks to ensure that required Python libraries are installed automatically.]]></summary></entry><entry><title type="html">Setting Up Proxy for Git</title><link href="https://miftanurfarid.github.io/blog/2016/git-proxy/" rel="alternate" type="text/html" title="Setting Up Proxy for Git"/><published>2016-08-26T15:06:00+00:00</published><updated>2016-08-26T15:06:00+00:00</updated><id>https://miftanurfarid.github.io/blog/2016/git-proxy</id><content type="html" xml:base="https://miftanurfarid.github.io/blog/2016/git-proxy/"><![CDATA[<h3 id="setting-proxy-in-git">Setting Proxy in Git</h3> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git config <span class="nt">--global</span> http.proxy http://user:password@proxyserver:proxyport
</code></pre></div></div> <p>Replace:</p> <ul> <li><code class="language-plaintext highlighter-rouge">user</code>: your proxy username</li> <li><code class="language-plaintext highlighter-rouge">password</code>: your proxy password</li> <li><code class="language-plaintext highlighter-rouge">proxyserver</code>: the proxy server URL</li> <li><code class="language-plaintext highlighter-rouge">proxyport</code>: the port number on the proxy server</li> </ul> <p>To stop using the proxy:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git config <span class="nt">--global</span> <span class="nt">--unset</span> http.proxy
</code></pre></div></div>]]></content><author><name></name></author><category term="linux"/><category term="linux"/><category term="git"/><category term="proxy"/><summary type="html"><![CDATA[This post explains how to configure Git to work behind a proxy server by setting the proxy credentials directly in Git’s configuration. It also covers how to remove the proxy settings when they are no longer needed.]]></summary></entry><entry><title type="html">Configuring Wget for Proxy-Restricted Campus Networks</title><link href="https://miftanurfarid.github.io/blog/2016/wget-proxy/" rel="alternate" type="text/html" title="Configuring Wget for Proxy-Restricted Campus Networks"/><published>2016-02-03T15:06:00+00:00</published><updated>2016-02-03T15:06:00+00:00</updated><id>https://miftanurfarid.github.io/blog/2016/wget-proxy</id><content type="html" xml:base="https://miftanurfarid.github.io/blog/2016/wget-proxy/"><![CDATA[<p>Open the <code class="language-plaintext highlighter-rouge">wgetrc</code> file in the <code class="language-plaintext highlighter-rouge">etc</code> folder by using the following command in the terminal:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>gedit /etc/wgetrc
</code></pre></div></div> <p>You can replace <code class="language-plaintext highlighter-rouge">gedit</code> with the editor you prefer, such as <code class="language-plaintext highlighter-rouge">nano</code>, <code class="language-plaintext highlighter-rouge">vim</code>, etc.</p> <p>Search for the text that looks like this:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># You can set the default proxies for Wget to use for http, https, and ftp.
# They will override the value in the environment.
#https_proxy = http://proxy.yoyodyne.com:18023/
#http_proxy = http://proxy.yoyodyne.com:18023/
#ftp_proxy = http://proxy.yoyodyne.com:18023/
</code></pre></div></div> <p>Then, remove the hash symbol (<code class="language-plaintext highlighter-rouge">#</code>) and edit the <code class="language-plaintext highlighter-rouge">https_proxy</code>, <code class="language-plaintext highlighter-rouge">http_proxy</code>, and <code class="language-plaintext highlighter-rouge">ftp_proxy</code> sections according to the proxy you use. For example:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># You can set the default proxies for Wget to use for http, https, and ftp.
# They will override the value in the environment.
https_proxy = http://proxy.mycampus.com:8023/
http_proxy = http://proxy.mycampus.com:8023/
ftp_proxy = http://proxy.mycampus.com:8023/
</code></pre></div></div> <p>If the proxy you use requires authentication with a username and password, set it up as follows:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># You can set the default proxies for Wget to use for http, https, and ftp.
# They will override the value in the environment.
https_proxy = http://username:password@proxy.mycampus.com:8023/
http_proxy = http://username:password@proxy.mycampus.com:8023/
ftp_proxy = http://username:password@proxy.mycampus.com:8023/
</code></pre></div></div> <p>Then, remove the hash symbol (<code class="language-plaintext highlighter-rouge">#</code>) from <code class="language-plaintext highlighter-rouge">use_proxy = on</code> to enable it:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># If you do not want to use proxy at all, set this to off.
use_proxy = on
</code></pre></div></div> <p>Finally, save the file.</p>]]></content><author><name></name></author><category term="linux"/><category term="linux"/><category term="wget"/><category term="proxy"/><summary type="html"><![CDATA[The internet at my campus, Institut Teknologi Sepuluh Nopember, uses a proxy, which makes downloading files with wget challenging. This post provides guidance on configuring wget with proxy settings to facilitate downloads in such an environment.]]></summary></entry></feed>